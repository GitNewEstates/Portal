

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="https://kit.fontawesome.com/f73e41610a.js" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />


    <script type="text/javascript"
            src="//static.filestackapi.com/filestack-js/3.x.x/filestack.min.js"></script>


    <!-- Syncfusion Essential JS 2 Scripts -->
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>

    <!--Toast & Chart References-->
    <script src="https://cdn.syncfusion.com/ej2/20.2.36/dist/ej2.min.js"></script>

    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/20.2.36/fluent.css" />
    



    <link href="~/Content/dashboard.css" rel="stylesheet">
    <link href="~/Content/SideBarNav.css" rel="stylesheet">
    <link href="~/Content/NEM-menu.css" rel="stylesheet" />
    <link href="~/Content/navbar-fixed-top.css" rel="stylesheet" type="text/css">
    <link href="~/Content/PortalPageTemplate.css" rel="stylesheet" type="text/css">
    <link href="~/Content/Custom.css" rel="stylesheet" type="text/css">

    <link rel="icon" href="~/Content/Box.png" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flexboxgrid/6.3.1/flexboxgrid.min.css" integrity="sha512-YHuwZabI2zi0k7c9vtg8dK/63QB0hLvD4thw44dFo/TfBFVVQOqEG9WpviaEpbyvgOIYLXF1n7xDUfU3GDs0sw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    @using Portal_MVC.Models
    @using Syncfusion.EJ2
    @using Syncfusion.EJ2.Notifications;
    @using Syncfusion.EJ2.Navigations;

</head>
<body>

    @*main site navigation*@

    <nav class="navbar navbar-default navbar-fixed-top" id="TopNav">
        <div>
            <div class="navbar-header hidden-sm hidden-xs">

                <a class="navbar-brand" href="http://www.newestates.co.uk">

                    <img src="~/Content/400-x-71.png" />
                </a>

            </div>

            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right CustomMenuUL">

                    <li id="MenuTextColour"><a href="https://www.newestates.co.uk/about-us/">About Us</a></li>

                    <li id="MenuTextColour" class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Services <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="https://www.newestates.co.uk/property-owners/">Property Owners</a></li>
                            <li><a href="https://www.newestates.co.uk/developers/">Developers</a></li>
                            <li><a href="https://www.newestates.co.uk/freeholders/">Freeholders</a></li>
                            <li><a href="https://www.newestates.co.uk/residents-management-companies/">Resident's Management Companies</a></li>
                            <li><a href="https://www.newestates.co.uk/social-housing/">Social Housing</a></li>
                        </ul>
                    </li>
                    <li id="MenuTextColour"><a href="https://www.newestates.co.uk/Latest-news/">Latest News</a></li>
                    <li id="MenuTextColour"><a href="https://www.newestates.co.uk/contact/">Contact</a></li>
                </ul>

            </div>
        </div>



        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 LoggedInHeader GradientBackground">
            @if(Model != null) 
            {
                if (Model.SelectedProperty != null)
                {
                    <div class="SelectedProperty">
                        <h6>
                            @Model.SelectedProperty.Address1
                            @if (Model.NotificationCount > 0)
                            {
                                <div style="position:relative;display:inline-block;" id="NotificationIcon">
                                    <i class="fa-solid fa-bell"></i>
                                    <span class="e-badge e-badge-primary e-badge-overlap e-badge-notification NotificationNumberBadge">@Model.NotificationCount</span>
                                </div>

                                @*<i class="fa-solid fa-bell"></i>*@
                            }
                        </h6>

                    </div>

                    }
             }

            @if (Model != null)
            {
                if (Model.NameofUser != null)
                {
                    <div class="CustomerName">
                        <h6>@Model.NameofUser</h6>
                    </div>
                }
            }
        </div>
    </nav>

    @*collapsed menu*@
    <nav class="navbar navbar-default navbar-fixed-top MobileNav" id="ss">
        <div>
            <div>
                <button type="button" class="navbar-toggle collapsed CustomBurger" data-toggle="collapse" data-target="#navbar1" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>

            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 LoggedInHeader GradientBackground">
                @if (Model != null)
                {
                    if (Model.SelectedProperty != null)
                    {
                        <div class="SelectedProperty">
                            <h6>@Model.SelectedProperty.Address1</h6>
                        </div>

                    }
                }
            </div>

            <div id="navbar1" class="navbar-collapse collapse">
                @Html.Partial("_MainMenu")
            </div>
        </div>
    </nav>


    <div class="container-fluid" id="sideNavContainer">
        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 LoggedInHeader GradientBackground">
            @if (Model != null)
            {
                if (Model.SelectedProperty != null)
                {
                    <div class="SelectedProperty">
                        <h6>
                            @Model.SelectedProperty.Address1
                            @if (Model.NotificationCount > 0)
                            {
                                <div style="position:relative;display:inline-block;">
                                    <i class="fa-solid fa-bell"></i>
                                    <span class="e-badge e-badge-primary e-badge-overlap e-badge-notification NotificationNumberBadge">@Model.NotificationCount</span>
                                </div>

                                @*<i class="fa-solid fa-bell"></i>*@
                            }
                        </h6>

                    </div>
                }
                if (Model.NameofUser != null)
                {
                    <div class="CustomerName">
                        <h6>@Model.NameofUser</h6>
                    </div>
                }
            }
        </div>


        <div class="row">
            <div class="col-sm-2 col-md-2 col-lg-2 sidebar" id="sideNav" style="min-width: 175px">

                @Html.Partial("_MainMenu")

            </div>
        </div>
    </div>

    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 RenderBodyContainer">
        <div style="" id="body">

          

            @RenderBody()
        </div>
    </div>





    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    @Html.EJS().ScriptManager()
    <script src="~/Scripts/Custom.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <script type="text/javascript">

    

        $(document).ready(function () {


           

            @*var ActualSeriesLable = document.getElementById('container_Series_0_Point_0_Text_0');
            var BudgetLabel = @Html.Raw(Json.Encode(Model.BudgetLabelAmount));
            console.log(BudgetLabel);

            ActualSeriesLable.innerHTML = BudgetLabel;*@



            //TOAST

            SetToastVisibility("false");

            var toastObj = document.getElementById('element').ej2_instances;

            document.getElementById("NotificationIcon").addEventListener('mouseover', function () {

                if (toastObj != null && document.getElementById("ToastDisplayed").innerText == "false") {
                    for (var i = 0; i <= toastObj.length -1; i++){
                        toastObj[i].show();

                    }
                    SetToastVisibility("true");

                }

            });

            function SetToastVisibility(val) {

                var toastDisplayed = document.getElementById("ToastDisplayed");
                if (toastDisplayed != null && toastDisplayed != 'undefined') {
                    toastDisplayed.innerText = val;
                }

            }






            $("#btnExpenseComplete").click(function () {

                HideExpenseFailMessage();
                HideExpenseSuccessMessage();

                var ImageContainer = document.getElementById('ImgageContainer');
                var images = ImageContainer.getElementsByTagName('img');
                var ImgURLS = [];
                for (i = 0; i <= images.length - 1; i++) {
                    ImgURLS.push(images[i].src);
                }


                //get values of each control
                var Date = document.getElementById("ExpensePaidDate").value;
                var SupplierID = document.getElementById("ExpenseSupplierList").value;
                var Paymethod = document.getElementById("ExpensePaymentTypeList").value;
                var Cost = document.getElementById("ExpenseCostTextBox").value;
                var Description = document.getElementsByTagName("textarea")[0].value;
                var budgetid = document.getElementById("BudgetList").value;
                var schedule = document.getElementById("ScheduleList").value;
                var headingID = document.getElementById("HeadingList").value;


                //validation
                if (Date == null || Date == 'undefined') {
                    alert("Date Invalid");
                    return;
                }

                if (Description == null || Description == 'undefined' || Description == "") {
                    alert("Description Invalid");
                    return;
                }

                if (SupplierID == null || SupplierID == 'undefined' || SupplierID == 0) {
                    alert("Supplier Invalid");
                    return;
                }

                if (Paymethod == null || Paymethod == 'undefined' || Paymethod == "") {
                    alert("Paymethod Invalid");
                    return;
                }


                if (headingID == null || headingID == 'undefined' || headingID == 0) {
                    alert("Heading ID Invalid");
                    return;
                }

                if (Cost == null || Cost == 0 || Cost == 'undefined') {
                    alert("Cost is invalid");
                    return;
                }



                //create object literal

                var PortalTrans = {
                    SupplierID: SupplierID,
                    HeadingID: headingID,
                    Amount: Cost,
                    TransactionDate: Date,
                    Paymethod: Paymethod,
                    Description: Description,
                    ImageUrls: ImgURLS,
                    BudgetID: budgetid,
                    ScheduleName: schedule
                }




                var url = "/Expense/Create/";
                $.post(url, PortalTrans, function (data) {

                   // console.log(data);
                    if (data.APIError.HasError == true) {

                        ShowExpenseFailMessage();

                    } else {


                        //reset values


                        document.getElementById("ExpenseCostTextBox").value = 0.00;

                        document.getElementsByTagName("textarea")[0].value = "";

                        ShowExpenseSuccessMessage();



                    }

                });



            })

            function HideExpenseSuccessMessage() {
                document.getElementById('ExpenseSuccessMessage').style.display = "none";
            }

            function ShowExpenseSuccessMessage() {
                document.getElementById('ExpenseSuccessMessage').style.display = "block";
            }
            function HideExpenseFailMessage() {
                document.getElementById('ExpenseFailMessage').style.display = "none";
            }

            function ShowExpenseFailMessage() {
                var Element = document.getElementById('ExpenseFailMessage');
                // var elementtext = Element.innerText;
                // Element.innerText = elementtext + " Error Message: " + ErrorMessage;
                Element.style.display = "block";
            }


            //get the current budget
            var FundDropDown = document.getElementById("FundSelected");

            if (FundDropDown != null) {
                if (FundDropDown.length > 0) {
                    FundDropDown.selectedIndex = 0;

                    GetBudgets(FundDropDown[0].value);
                }
            }


            //****************** Expenses**********************
            $("#FundSelected").change(function () {

                var strSelected = "";
                $("#FundSelected option:selected").each(function () {
                    strSelected += $(this)[0].value;
                });

                GetBudgets(strSelected);

            });

            function GetBudgets(FundID) {


                var url = "/Expense/GetBudgetDetails/" + FundID;
                var BudgetDropDown = document.getElementById("BudgetList");

                removeOptions(BudgetDropDown);

                $.get(url, function (data) {

                    //const obj = JSON.parse(data);

                    // do something if necessary
                    for (let i = 0; i < data.length; i++) {
                        var el = document.createElement("option");
                        el.textContent = data[i].BudgetName;
                        el.value = data[i].id;
                        BudgetDropDown.appendChild(el);

                    }

                    if (BudgetDropDown.length > 0) {
                        BudgetDropDown.selectedIndex = 0;

                        GetSchedules(BudgetDropDown[0].value);
                    };
                });

            }

            $("#BudgetList").change(function () {
                var strSelected = "";
                $("#FundSelected option:selected").each(function () {
                    strSelected += $(this)[0].value;
                });

                GetSchedules(strSelected);
            });

            function GetSchedules(BudgetID) {

                var ScheduleDropDown = document.getElementById("ScheduleList");
                var url = "/Expense/GetBudgetScheduleDetails/" + BudgetID;
                removeOptions(ScheduleDropDown);


                $.get(url, function (data) {

                    const obj = JSON.parse(data);

                    // do something if necessary
                    for (let i = 0; i < obj.length; i++) {
                        var el = document.createElement("option");
                        el.textContent = obj[i].Schedule;
                        el.value = obj[i].Schedule;
                        ScheduleDropDown.appendChild(el);

                    }

                    if (ScheduleDropDown.length > 0) {
                        ScheduleDropDown.selectedIndex = 0;
                        var schedule = ScheduleDropDown[0].value;


                        GetBudgetHeadings(BudgetID, schedule)
                    };
                });
            }

            $("#ScheduleList").change(function () {

                var strSelected = "";
                var SelectedSchedule = ""
                $("#ScheduleList option:selected").each(function () {
                    strSelected += $(this)[0].value;
                    SelectedSchedule += $(this)[0].textContent;
                });



                var BudgetDropDown = document.getElementById("BudgetList");
                GetBudgetHeadings(BudgetDropDown.value, SelectedSchedule);

            });

            function GetBudgetHeadings(BudgetID, ScheduleName) {
                var HeadingDropDown = document.getElementById("HeadingList");
                var url = "/Expense/GetBudgetHeadings/" + BudgetID + "?schedule=" + ScheduleName;

                removeOptions(HeadingDropDown);

                $.get(url, function (data) {


                    const obj = JSON.parse(data);

                    // do something if necessary
                    for (let i = 0; i < obj.length; i++) {
                        var el = document.createElement("option");
                        el.textContent = obj[i].Name;
                        el.value = obj[i].id;
                        HeadingDropDown.appendChild(el);

                    }

                    if (HeadingDropDown.length > 0) {
                        HeadingDropDown.selectedIndex = 0;
                    };
                });
            }





            function removeOptions(selectElement) {
                var i, L = selectElement.options.length - 1;
                for (i = L; i >= 0; i--) {
                    selectElement.remove(i);
                }
            }
            //******************Images

            var loadimg2 = document.getElementById('ViewCaseIcon');
            if (loadimg2 != null) {
                alert(loadimg2)
                loadimg2.addEventListener('click', LoadImage3);
            } else {
                //alert('null')
            }


            //UploadButton.preventDefault();
            //UploadButton.addEventListener('click', test);

            function LoadImage3(e) {
                e.preventDefault();
                alert('clicked')
                //SetUploadedImages(files);
            }
        });



    </script>

    <script>
        function rowSelected(args) {
            var grid = document.getElementById("SelectionAPI").ej2_instances[0];
            var selectedrowindex = grid.getSelectedRowIndexes();  // get the selected row indexes.
            alert(selectedrowindex); // to alert the selected row indexes.
            var selectedrecords = grid.getSelectedRecords();  // get the selected records.
        }
    </script>

  


</body>



</html>

