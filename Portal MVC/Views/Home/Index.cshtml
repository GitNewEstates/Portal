@using Portal_MVC.Models
@model Portal_MVC.Models.HomeViewModel

@{
    ViewBag.Title = "Select Property - New Estates";

    
}

@using Syncfusion.EJ2.Navigations;

 

@if (Model != null)
{
    if (Model.SelectedProperty.ID == 0)
    {
        <div class="container">
            @Html.Partial("_SelectEstate", Model)
        </div>
    }
    else
    {
        if (Model.NotificationCount > 0)
        {
            for (int i = 1; i <= Model.NotificationCount; i++)
            {
                @Html.EJS().Toast("element").Title($"Unread Notification {i}").Content("You have unread notifications for this property").Position(p => p.X("Right")).Render();
            }

            <p id="ToastDisplayed" style="display: none"></p>


        }

<div class="Full-Width-Container">
    <div class="row">
        <div class="col-lg-5 col-md-5 col-sm-11 col-xs-11 e-card e-custom-card">
            @Html.EJS().ListView("listview").Enable(true).DataSource(Model.OwnedProperties).HeaderTitle("Your Properties").ShowHeader(true).ShowIcon(true).Fields(new Syncfusion.EJ2.Lists.ListViewFieldSettings { IconCss = "icon" }).Render()
        </div>
        <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11  e-card e-custom-card">
            
                @(Html.EJS().Chart("container").Background("white").Height("200px").Series(series =>
                        {

                        series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Bar).
                            XName("Name").
                            YName("Amount").
                            CornerRadius(cr => cr.BottomLeft(10).BottomRight(10).TopLeft(10).TopRight(10)).

                            Marker(mr => mr.DataLabel(dl => dl.Visible(true).Name("LabelName").

                            Position(Syncfusion.EJ2.Charts.LabelPosition.Bottom).
                            Font(ff => ff.FontWeight("600").Color("#ffffff")))).
                            DataSource(Model.BudgetActualDataList).
                            PointColorMapping("color").
                            Add();
                        }).
                           PrimaryXAxis(px => px.Interval(1)
                                .MajorGridLines(mg => mg.Width(0))
                                .MajorTickLines(mg => mg.Width(0))
                                .LineStyle(mg => mg.Width(0))
                                .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)

                                ).

                           PrimaryYAxis(py => py.Minimum(0).Maximum(Model.XAxisMaxValue)
                                .MajorGridLines(mg => mg.Width(0))
                                .MajorTickLines(mg => mg.Width(0))
                                .LineStyle(mg => mg.Width(0))
                                .LabelStyle(ls => ls.Color("#ffffff"))

                                ).

                           ChartArea(area => area.Border(br => br.Color("transparent"))).
                           LegendSettings(ls => ls.Visible(false)).
                           Title("Overall Fund BVA").
                           TitleStyle(ts => ts.Color("blue")).
                           Render()
                        )
            
        </div>
    </div>

    <div class="Full-Width-Container">
        <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11">
            @if (string.IsNullOrWhiteSpace(Model.RepairErrorMessage))
            {
                <h6>Repairs</h6>
                @(Html.EJS().Accordion("RepairAccordian").Items(Model.RepairAccordianObjects).ExpandMode(Syncfusion.EJ2.Navigations.ExpandMode.Multiple).Render())
            } else {
                <h6>@Model.RepairErrorMessage</h6>
            }
        </div>



        <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11">
            <h6>Attendances</h6>
            @(Html.EJS().Accordion("AttendanceAccordian").Items(Model.AttendanceVisitCollection).ExpandMode(Syncfusion.EJ2.Navigations.ExpandMode.Multiple).Render())
        </div>
    </div>

        @*<div class="Full-Width-Container">
            <div class="container">
                <h6>Attendances</h6>
                @(Html.EJS().Accordion("defaultAccordion").Items(Model.AttendanceVisitCollection).ExpandMode(Syncfusion.EJ2.Navigations.ExpandMode.Multiple).Render())

            </div>
        </div>*@

            </div>

    }

}

<style>
    /*.e-card {
        justify-content: flex-start;
        margin-left: 10px;
        margin-right: 10px;
        margin-bottom: 10px;
        height: max-content;
    }
    .e-listview {
        border: none;
       
    }

    .e-custom-card {
        position: relative;
        overflow: visible;
        border-radius: 15px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
        transition: 0.2s;
        border-width: 1px;
        padding: 1px;
    }

    .Full-Width-Container {
        flex: 0 0 100%;
    }

    .e-accordion {
        width: 100%;
        
    }

    .e-accordion .e-acrdn-item.e-select {
        border-color: #0591bc;
    }

    .e-accordion .e-acrdn-item .e-acrdn-header .e-acrdn-header-content {
        color: white !important;
    }

    .e-accordion .e-acrdn-item .e-acrdn-header .e-toggle-icon {
        color: white !important;
    }
    .e-acrdn-header {
        background: #0591bc !important;
        color: white !important;
        justify-content: center;
    }*/
</style>

<script type="text/javascript">
    

</script>




