@using Portal_MVC.Models
@model Portal_MVC.Models.HomeViewModel

@{
    ViewBag.Title = "Select Property - New Estates";
   

}

@using Syncfusion.EJ2.Navigations;
@using Syncfusion.EJ2.Lists;

<div class="main-content-container" id="main-content-container">

    @if (Model != null)
    {
        if (string.IsNullOrWhiteSpace(Model.SelectedEstateID))
        {

            @Html.Partial("_SelectEstate", Model)


        }
        else
        {
            if (Model.NotificationCount > 0)
            {
                for (int i = 1; i <= Model.NotificationCount; i++)
                {
                    @Html.EJS().Toast("element").Title($"Unread Notification {i}").Content("You have unread notifications for this property").Position(p => p.X("Right")).Render();
                }

                <p id="ToastDisplayed" style="display: none"></p>


            }
            @Html.HiddenFor(m => m.OwnedUnitsViewModel.OwnedProperties.Count, new { id = "OwnedUnitCount" })
            @Html.HiddenFor(m => m.SelectedProperty.ID, new { id = "SelectedPropertyID" })
            <div class="Full-Width-Container">
                <div class="row">
                    <div style="width: 100%; display: flex; flex-wrap: wrap; justify-content: space-between">
                        <div class="col-lg-5 col-md-5 col-sm-11 col-xs-11">
                            @Html.Partial("_OwnedUnits", Model.OwnedUnitsViewModel)
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11  e-card e-custom-card">
                           @Html.Partial("_OpenFundBVAChart", Model.OpenFundBVAChartViewModel)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11">
                        @if (string.IsNullOrWhiteSpace(Model.RepairErrorMessage))
                        {
                            <h6>Repairs</h6>
                            @(Html.EJS().Accordion("RepairAccordian").Items(Model.RepairAccordianObjects).ExpandMode(Syncfusion.EJ2.Navigations.ExpandMode.Multiple).Render())
                        }
                        else
                        {
                            <h6>@Model.RepairErrorMessage</h6>
                        }
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11">
                        <h6>Attendances</h6>
                        @Html.Partial("_AttendanceLogAccordian", Model.AttendanceLogAccordianViewModel)
                    </div>
                </div>
            </div>


            <div class="Full-Width-Container">
                <div class="col-lg-6 col-md-6 col-sm-11 col-xs-11 e-card e-custom-card" style="margin-left: 0px; margin-top: 10px;">
                    @Html.EJS().Tooltip("RepairTooltip").Content(Model.NotificationviewModel.NewRepairToolTip).Position(Syncfusion.EJ2.Popups.Position.TopCenter).ContentTemplate(@<div>
                        @Html.EJS().CheckBox("RepairNotificationCheck").Label("New Repair Raised").Checked(Model.NotificationviewModel.NewRepairNotification).CssClass("NewRepairNotification").Render()
                    </div>).Render()
                    @Html.EJS().CheckBox("RepairAllUnitsCheck").Label("Apply to all my properties?").Checked(Model.NotificationviewModel.NewRepairApplyToAllUnits).CssClass("NewRepairAllUnits e-small").Render()

                    @Html.EJS().Tooltip("InsuranceTooltip").Content(Model.NotificationviewModel.NewInsuranceToolTip).Position(Syncfusion.EJ2.Popups.Position.TopCenter).ContentTemplate(@<div>
                        @Html.EJS().CheckBox("InsuranceNotificationCheck").Label("New Insurance Policy Uploaded").Checked(Model.NotificationviewModel.NewInsuranceNotification).CssClass("NewInsuranceNotification").Render()
                    </div>).Render()

                    @Html.EJS().Tooltip("AttendanceTooltip").Content(Model.NotificationviewModel.NewAttendanceLogToolTip).Position(Syncfusion.EJ2.Popups.Position.TopCenter).ContentTemplate(@<div>
                        @Html.EJS().CheckBox("AttendanceNotificationCheck").Label("New Attendance Log submitted").Checked(Model.NotificationviewModel.NewAttendanceLogNotification).CssClass("NewAttendanceNotification").Render()
                    </div>).Render()
                </div>
            </div>

            <div class="Full-Width-Container">

            </div>

        }

    }

</div>

<style>
    .NewRepairAllUnits {
        display: none;
        margin-left: 25px;
    }

   
</style>


<script>

    function ChartLoad(args) {
      
    }

    var RepairNotificationCheck = document.getElementById('RepairNotificationCheck')

  


    if (RepairNotificationCheck != null) {


        RepairNotificationCheck.addEventListener('change', function (e) {
            var RepairCheckWrapper = document.getElementsByClassName('NewRepairNotification')[0].getElementsByClassName('e-check');
            var ischecked;
            if (RepairCheckWrapper != null) {
                if (RepairCheckWrapper.length > 0) {
                    ischecked = true;

                } else {
                    ischecked = false;
                }
            } else {
                ischecked = false;
            }

            ShowRepairForAllUnits(ischecked);
            PostRepairAjax(ischecked);
        })
    }

    function ShowRepairForAllUnits(val) {
        var OwnedPropertyCount = document.getElementById("OwnedUnitCount").value;

        if (OwnedPropertyCount > 1) {

            var i = document.getElementsByClassName('NewRepairAllUnits')[0];

            if (val == true) {
                $(i).slideDown();
            } else {
                $(i).slideUp();
            }
        }


    }

    function PostRepairAjax(val) {
        var SelectedPropertyID = document.getElementById("SelectedPropertyID").value;
        var obj = {
            IsChecked: val,
            EstateID: SelectedPropertyID
        }
        var url = "/Home/RepairNotifactionAsync/";
        console.log(url);
        $.post(url, obj, function (data) {

        });
    }







</script>




